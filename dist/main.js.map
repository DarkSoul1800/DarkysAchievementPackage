{
  "version": 3,
  "sources": ["../src/Achievement/index.js", "../src/init/checkHook/index.js", "../src/init/createHook/index.js", "../src/init/overrides/index.js", "../src/init/index.js", "../src/load/index.js", "../src/save/index.js", "../src/main.js"],
  "sourcesContent": ["const Achievement = (name, desc, icon) => {\n    const answer = new Game.Achievement(name, desc, icon);\n    answer.darky = 1;\n    answer.ddesc = desc;\n\n    return answer;\n};\n\nexport default Achievement;\n", "const checkHookContent = [\n    // Have X buildings\n    () => {\n        if (Game.Objects.Cursor.amount >= 900) {\n            Game.Win('Squeak goes the mouse');\n        }\n    },\n    () => {\n        if (Game.Objects.Grandma.amount >= 650) {\n            Game.Win(\"I'm too old for this\");\n        }\n    },\n    () => {\n        if (Game.Objects.Farm.amount >= 650) {\n            Game.Win('Gorden garden');\n        }\n    },\n    () => {\n        if (Game.Objects.Mine.amount >= 650) {\n            Game.Win('A fine mine you got there');\n        }\n    },\n    () => {\n        if (Game.Objects.Factory.amount >= 650) {\n            Game.Win('Working 24/7');\n        }\n    },\n    () => {\n        if (Game.Objects.Bank.amount >= 650) {\n            Game.Win('Bank on it');\n        }\n    },\n    () => {\n        if (Game.Objects.Temple.amount >= 650) {\n            Game.Win('Temple pun');\n        }\n    },\n    () => {\n        if (Game.Objects['Wizard tower'].amount >= 650) {\n            Game.Win(\"It's magic, Joel!\");\n        }\n    },\n    () => {\n        if (Game.Objects.Shipment.amount >= 650) {\n            Game.Win('My shipment arrives in the morning');\n        }\n    },\n    () => {\n        if (Game.Objects['Alchemy lab'].amount >= 650) {\n            Game.Win('Turning cookies into gold since 2013');\n        }\n    },\n    () => {\n        if (Game.Objects.Portal.amount >= 650) {\n            Game.Win('A portal inside of a portal');\n        }\n    },\n    () => {\n        if (Game.Objects['Time machine'].amount >= 650) {\n            Game.Win('It all began on the 8th of August, 2013');\n        }\n    },\n    () => {\n        if (Game.Objects['Antimatter condenser'].amount >= 650) {\n            Game.Win('AntimatterCon');\n        }\n    },\n    () => {\n        if (Game.Objects.Prism.amount >= 650) {\n            Game.Win('Stop being a prissm');\n        }\n    },\n    () => {\n        if (Game.Objects.Chancemaker.amount >= 650) {\n            Game.Win('And yet you probably never got a blab');\n        }\n    },\n    () => {\n        if (Game.Objects['Fractal engine'].amount >= 650) {\n            Game.Win('Gouchnox');\n        }\n    },\n    () => {\n        if (Game.Objects['Javascript console'].amount >= 650) {\n            Game.Win('Follow the javascript');\n        }\n    },\n    () => {\n        if (Game.Objects.Idleverse.amount >= 650) {\n            Game.Win(\"Don't call them fanverses, you fool\");\n        }\n    },\n    // Have X of every building\n    () => {\n        if (Math.min(...Game.ObjectsById.map(building => building.amount)) >= 650) {\n            Game.Win('Sexcentennial and a half');\n        }\n    },\n    // Buildings owned\n    () => {\n        if (Game.BuildingsOwned >= 3000) {\n            Game.Win('Owner of Buildings');\n        }\n    },\n    () => {\n        if (Game.BuildingsOwned >= 5000) {\n            Game.Win('World-dominating company');\n        }\n    },\n    () => {\n        if (Game.BuildingsOwned >= 6000) {\n            Game.Win('Creator of the Cookieverse');\n        }\n    },\n    () => {\n        if (Game.BuildingsOwned >= 7000) {\n            Game.Win(\"Build until you can't build anymore\");\n        }\n    },\n    () => {\n        if (Game.BuildingsOwned >= 9000) {\n            Game.Win('Overlord');\n        }\n    },\n    () => {\n        if (Game.BuildingsOwned >= 10000) {\n            Game.Win(\"That's enough, boss\");\n        }\n    },\n    // Upgrades owned\n    () => {\n        if (Game.UpgradesOwned >= 500) {\n            Game.Win('Earth-shattering association');\n        }\n    },\n    () => {\n        if (Game.UpgradesOwned >= 600) {\n            Game.Win('Maker of the Idleverse');\n        }\n    },\n    // Prestige upgrades owned\n    () => {\n        if (Game.Has('Lucky digit') && Game.Has('Lucky number') && Game.Has('Lucky payout')) {\n            Game.Win('Secret fortune');\n        }\n    },\n    () => {\n        const prestigeUpgradesOwned = Game.PrestigeUpgrades.reduce(\n            (sum, upgrade) => (upgrade.bought ? sum + 1 : sum),\n            0,\n        );\n\n        if (prestigeUpgradesOwned >= 15) {\n            Game.Win('Pretty prestige');\n        }\n    },\n    () => {\n        const prestigeUpgradesOwned = Game.PrestigeUpgrades.reduce(\n            (sum, upgrade) => (upgrade.bought ? sum + 1 : sum),\n            0,\n        );\n\n        if (prestigeUpgradesOwned >= 30) {\n            Game.Win('Live and learn');\n        }\n    },\n    () => {\n        const prestigeUpgradesOwned = Game.PrestigeUpgrades.reduce(\n            (sum, upgrade) => (upgrade.bought ? sum + 1 : sum),\n            0,\n        );\n\n        if (prestigeUpgradesOwned >= 60) {\n            Game.Win('We will stay with you forever');\n        }\n    },\n    // Big cookie clicks\n    () => {\n        if (Game.cookieClicks >= 1000) {\n            Game.Win('Clicker');\n        }\n    },\n    () => {\n        if (Game.cookieClicks >= 10000) {\n            Game.Win('Advanced Clicker');\n        }\n    },\n    () => {\n        if (Game.cookieClicks >= 25000) {\n            Game.Win('Expert Clicker');\n        }\n    },\n    // Make X cookies from clicking\n    () => {\n        if (Game.handmadeCookies >= 1e29) {\n            Game.Win('Stop it, it clickles');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e31) {\n            Game.Win('Keep up the click');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e33) {\n            Game.Win('Clicking is the new booping');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e35) {\n            Game.Win('The final click');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e37) {\n            Game.Win('Sike, thats the wrong achievement');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e39) {\n            Game.Win('How about we tap the cookie now');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e41) {\n            Game.Win('Cookie Destroyer');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e43) {\n            Game.Win('Give it a click');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e45) {\n            Game.Win('Clicking Frenzy: Our Lord and Saviour');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e47) {\n            Game.Win('Hand-made cookies are still the best');\n        }\n    },\n    () => {\n        if (Game.handmadeCookies >= 1e49) {\n            Game.Win('My strange clicking addiction');\n        }\n    },\n    // Prestige amount\n    () => {\n        if (Game.prestige >= 100) {\n            Game.Win('Heavenly');\n        }\n    },\n    () => {\n        if (Game.prestige >= 10000) {\n            Game.Win('Transcendent');\n        }\n    },\n    () => {\n        if (Game.prestige >= 1000000) {\n            Game.Win('Higher energy state');\n        }\n    },\n    () => {\n        if (Game.prestige >= 1e8) {\n            Game.Win('Omniverse');\n        }\n    },\n    () => {\n        if (Game.prestige >= 1e10) {\n            Game.Win('The Ascendant');\n        }\n    },\n    // Themed upgrades\n    () => {\n        if (\n            Game.Has('British tea biscuits') &&\n            Game.Has('Chocolate british tea biscuits') &&\n            Game.Has('Round british tea biscuits') &&\n            Game.Has('Round chocolate british tea biscuits') &&\n            Game.Has('Round british tea biscuits with heart motif') &&\n            Game.Has('Round chocolate british tea biscuits with heart motif')\n        ) {\n            Game.Win('Getting fancy');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Caramoas') &&\n            Game.Has('Sagalongs') &&\n            Game.Has('Shortfoils') &&\n            Game.Has('Win mints') &&\n            Game.Has('Fig gluttons') &&\n            Game.Has('Loreols') &&\n            Game.Has('Jaffa cakes') &&\n            Game.Has(\"Grease's cups\") &&\n            Game.Has('Digits') &&\n            Game.Has('Lombardia cookies') &&\n            Game.Has('Bastenaken cookies') &&\n            Game.Has('Festivity loops') &&\n            Game.Has('Havabreaks') &&\n            Game.Has('Zilla wafers') &&\n            Game.Has('Dim Dams') &&\n            Game.Has('Pokey')\n        ) {\n            Game.Win('You wanna be popular?');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Rose macarons') &&\n            Game.Has('Lemon macarons') &&\n            Game.Has('Chocolate macarons') &&\n            Game.Has('Pistachio macarons') &&\n            Game.Has('Hazelnut macarons') &&\n            Game.Has('Violet macarons') &&\n            Game.Has('Caramel macarons') &&\n            Game.Has('Licorice macarons') &&\n            Game.Has('Earl Grey macarons')\n        ) {\n            Game.Win('Emmanuel Macaron');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Butter horseshoes') &&\n            Game.Has('Butter pucks') &&\n            Game.Has('Butter knots') &&\n            Game.Has('Butter slabs') &&\n            Game.Has('Butter swirls')\n        ) {\n            Game.Win('Rich butterfingers');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Cookie dough') &&\n            Game.Has('Burnt cookie') &&\n            Game.Has('A chocolate chip cookie but with the chips picked off for some reason') &&\n            Game.Has('Flavor text cookie') &&\n            Game.Has('High-definition cookie') &&\n            Game.Has('Crackers')\n        ) {\n            Game.Win('Bake me, maybe?');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Toast') &&\n            Game.Has('Peanut butter & jelly') &&\n            Game.Has('Wookies') &&\n            Game.Has('Cheeseburger') &&\n            Game.Has('One lone chocolate chip') &&\n            Game.Has('Pizza') &&\n            Game.Has('Candy')\n        ) {\n            Game.Win('Burger Clicker');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Profiteroles') &&\n            Game.Has('Jelly donut') &&\n            Game.Has('Glazed donut') &&\n            Game.Has('Chocolate cake') &&\n            Game.Has('Strawberry cake') &&\n            Game.Has('Apple pie') &&\n            Game.Has('Lemon meringue pie') &&\n            Game.Has('Butter croissant')\n        ) {\n            Game.Win('Pastries from the past');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Kitten helpers') &&\n            Game.Has('Kitten workers') &&\n            Game.Has('Kitten engineers') &&\n            Game.Has('Kitten overseers') &&\n            Game.Has('Kitten managers') &&\n            Game.Has('Kitten accountants') &&\n            Game.Has('Kitten specialists') &&\n            Game.Has('Kitten experts') &&\n            Game.Has('Kitten consultants') &&\n            Game.Has('Kitten assistants to the regional manager') &&\n            Game.Has('Kitten marketeers') &&\n            Game.Has('Kitten analysts') &&\n            Game.Has('Kitten executives') &&\n            Game.Has('Kitten angels') &&\n            Game.Has('Fortune #103')\n        ) {\n            Game.Win('Purrfect Perfection');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Future almanacs') &&\n            Game.Has('Seismic magic') &&\n            Game.Has('Quantum electronics') &&\n            Game.Has('Contracts from beyond') &&\n            Game.Has('Paganism') &&\n            Game.Has('Arcane knowledge') &&\n            Game.Has('Fossil fuels') &&\n            Game.Has('Primordial ores') &&\n            Game.Has('Infernal crops') &&\n            Game.Has('Relativistic parsec-skipping') &&\n            Game.Has('Extra physics funding') &&\n            Game.Has('Light magic') &&\n            Game.Has('Gemmed talismans') &&\n            Game.Has('Recursive mirrors') &&\n            Game.Has('Script grannies') &&\n            Game.Has('Perforated mille-feuille cosmos')\n        ) {\n            Game.Win(\"It's sweet, sweet, sweet Synergy\");\n        }\n    },\n    () => {\n        if (\n            Game.Has('Rain prayer') &&\n            Game.Has('Asteroid mining') &&\n            Game.Has('Temporal overclocking') &&\n            Game.Has('Printing presses') &&\n            Game.Has('God particle') &&\n            Game.Has('Magical botany') &&\n            Game.Has('Shipyards') &&\n            Game.Has('Gold fund') &&\n            Game.Has('Abysmal glimmer') &&\n            Game.Has('Primeval glow') &&\n            Game.Has('Chemical proficiency') &&\n            Game.Has('Mystical energies') &&\n            Game.Has('Charm quarks') &&\n            Game.Has('Mice clicking mice') &&\n            Game.Has('Tombola computing') &&\n            Game.Has('Infraverses and superverses')\n        ) {\n            Game.Win('Out of Energy? Get Synergy!');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Dragon scale') &&\n            Game.Has('Dragon claw') &&\n            Game.Has('Dragon fang') &&\n            Game.Has('Dragon teddy bear')\n        ) {\n            Game.Win('Spike the dragon');\n        }\n    },\n    () => {\n        if (\n            Game.Has('Elderwort biscuits') &&\n            Game.Has('Bakeberry cookies') &&\n            Game.Has('Duketater cookies') &&\n            Game.Has('Green yeast digestives') &&\n            Game.Has('Fern tea') &&\n            Game.Has('Ichor syrup') &&\n            Game.Has('Wheat slims')\n        ) {\n            Game.Win('Collecting these is like growing plants');\n        }\n    },\n    // Buildings' level\n    () => {\n        const buildingsLevels = Game.ObjectsById.map(building => building.level);\n\n        if (buildingsLevels.filter(level => level >= 1).length === Game.ObjectsById.length) {\n            Game.Win('Level 1 complete!');\n        }\n    },\n    () => {\n        const buildingsLevels = Game.ObjectsById.map(building => building.level);\n\n        if (buildingsLevels.filter(level => level >= 5).length === Game.ObjectsById.length) {\n            Game.Win('Five Hive');\n        }\n    },\n    () => {\n        const buildingsLevels = Game.ObjectsById.map(building => building.level);\n\n        if (buildingsLevels.filter(level => level >= 10).length === Game.ObjectsById.length) {\n            Game.Win('This took forever');\n        }\n    },\n    // Shadow achievements\n    () => {\n        if (Game.bakeryName === 'Darky') {\n            Game.Win('Mod-God complex');\n        }\n    },\n    () => {\n        if (Game.goldenClicks >= 77777) {\n            Game.Win('Golden Jackpot');\n        }\n    },\n];\n\nexport default checkHookContent;\n", "import Achievement from '../../Achievement';\n\nconst spritesheet = 'https://hyoretsu.github.io/DarkysCheevosPackage/static/achievements.png';\nconst externalSpritesheet = 'https://i.imgur.com/3jNJJNw.png';\n\nconst createHook = () => {\n    // Have X buildings\n\n    Achievement('Squeak goes the mouse', 'Have <b>900</b> cursors.', [0, 19]);\n    Game.last.order = 1060;\n    Achievement(\"I'm too old for this\", 'Have <b>650</b> grandmas.', [1, 21]);\n    Game.last.order = 1110;\n    Achievement('Gorden garden', 'Have <b>650</b> farms.', [2, 21]);\n    Game.last.order = 1210;\n    Achievement('A fine mine you got there', 'Have <b>650</b> mines.', [3, 21]);\n    Game.last.order = 1310;\n    Achievement('Working 24/7', 'Have <b>650</b> factories.', [4, 21]);\n    Game.last.order = 1410;\n    Achievement('Bank on it', 'Have <b>650</b> banks.', [15, 21]);\n    Game.last.order = 1430;\n    Achievement('Temple pun', 'Have <b>650</b> temples.', [16, 21]);\n    Game.last.order = 1460;\n    Achievement(\"It's magic, Joel!\", 'Have <b>650</b> wizard towers.', [17, 21]);\n    Game.last.order = 1480;\n    Achievement('My shipment arrives in the morning', 'Have <b>650</b> shipments.', [5, 21]);\n    Game.last.order = 1510;\n    Achievement('Turning cookies into gold since 2013', 'Have <b>650</b> alchemy labs.', [6, 21]);\n    Game.last.order = 1610;\n    Achievement('A portal inside of a portal', 'Have <b>650</b> portals.', [7, 21]);\n    Game.last.order = 1710;\n    Achievement(\n        'It all began on the 8th of August, 2013',\n        'Have <b>650</b> time machines.',\n        [8, 21],\n    );\n    Game.last.order = 1810;\n    Achievement('AntimatterCon', 'Have <b>650</b> antimatter condensers.', [13, 21]);\n    Game.last.order = 1910;\n    Achievement('Stop being a prissm', 'Have <b>650</b> prisms.', [14, 21]);\n    Game.last.order = 2010;\n    Achievement('And yet you probably never got a blab', 'Have <b>650</b> chancemakers.', [19, 21]);\n    Game.last.order = 2110;\n    Achievement('Gouchnox', 'Have <b>650</b> fractal engines.<q>69</q>', [20, 21]);\n    Game.last.order = 2210;\n    Achievement('Follow the javascript', 'Have <b>650</b> javascript consoles.', [32, 21]);\n    Game.last.order = 2310;\n    Achievement(\"Don't call them fanverses, you fool\", 'Have <b>650</b> idleverses.', [33, 21]);\n    Game.last.order = 2410;\n\n    // Have X of every building\n\n    Achievement(\n        'Sexcentennial and a half',\n        'Have at least <b>650 of everything</b>.<q>Yes I just did that.</q>',\n        [1, 3, spritesheet],\n    );\n    Game.last.order = 7004;\n\n    // Buildings owned\n\n    Achievement('Owner of Buildings', 'Own <b>3000</b> buildings.', [0, 0, spritesheet]);\n    Game.last.order = 5010;\n    Achievement('World-dominating company', 'Own <b>5000</b> buildings.', [2, 0, spritesheet]);\n    Game.last.order = 5012;\n    Achievement('Creator of the Cookieverse', 'Own <b>6000</b> buildings.', [3, 0, spritesheet]);\n    Game.last.order = 5013;\n    Achievement(\"Build until you can't build anymore\", 'Own <b>7000</b> buildings.', [\n        4,\n        0,\n        spritesheet,\n    ]);\n    Game.last.order = 5014;\n    Achievement('Overlord', 'Own <b>9000</b> buildings.', [4, 4, spritesheet]);\n    Game.last.order = 5016;\n    Achievement(\"That's enough, boss\", 'Own <b>10000</b> buildings.', [6, 0, spritesheet]);\n    Game.last.order = 5017;\n\n    // Upgrades owned\n\n    Achievement('Earth-shattering association', 'Purchase <b>500</b> upgrades.', [\n        2,\n        1,\n        spritesheet,\n    ]);\n    Game.last.order = 6003;\n    Achievement('Maker of the Idleverse', 'Purchase <b>600</b> upgrades.', [3, 1, spritesheet]);\n    Game.last.order = 6004;\n\n    // Prestige upgrades owned\n\n    Achievement(\n        'Secret fortune',\n        'Purchase the <b>3 secret prestige upgrades</b>.<q>You got more than one ace up your sleeve, huh?',\n        [24, 15],\n    );\n    Game.last.order = 32001;\n    Achievement('Pretty prestige', 'Purchase <b>15</b> prestige upgrades.', [\n        19,\n        48,\n        externalSpritesheet,\n    ]);\n    Game.last.order = 6005;\n    Achievement('Live and learn', 'Purchase <b>30</b> prestige upgrades.<q>And never forget.', [\n        19,\n        47,\n        externalSpritesheet,\n    ]);\n    Game.last.order = 6006;\n    Achievement(\n        'We will stay with you forever',\n        \"Purchase <b>60</b> prestige upgrades.<q>Don't reset us.</q>\",\n        [19, 46, externalSpritesheet],\n    );\n    Game.last.order = 6007;\n\n    // Big cookie clicks\n\n    Achievement('Clicker', 'Click on the big cookie <b>1,000</b> times.', [11, 22]);\n    Game.last.order = 1020;\n    Achievement('Advanced Clicker', 'Click on the big cookie <b>10,000</b> times.', [11, 23]);\n    Game.last.order = 1021;\n    Achievement('Expert Clicker', 'Click on the big cookie <b>25,000</b> times.', [11, 24]);\n    Game.last.order = 1022;\n\n    // Make X cookies from clicking\n\n    Achievement(\n        'Stop it, it clickles',\n        'Make <b>100 octillion</b> cookies from clicking.',\n        [11, 21],\n    );\n    Game.last.order = 1010;\n    Achievement('Keep up the click', 'Make <b>10 nonillion</b> cookies from clicking.', [\n        0,\n        69,\n        externalSpritesheet,\n    ]);\n    Game.last.order = 1011;\n    Achievement('Clicking is the new booping', 'Make <b>1 decillion</b> cookies from clicking.', [\n        0,\n        34,\n        externalSpritesheet,\n    ]);\n    Game.last.order = 1012;\n    Achievement(\n        'The final click',\n        'Make <b>100 decillion</b> cookies from clicking.<q>But its never over.</q>',\n        [0, 46, externalSpritesheet],\n    );\n    Game.last.order = 1013;\n    Achievement(\n        'Sike, thats the wrong achievement',\n        \"Make <b>10 undecillion</b> cookies from clicking.<q>The last achievement wasn't the final one.</q>\",\n        [0, 5, spritesheet],\n    );\n    Game.last.order = 1014;\n    Achievement(\n        'How about we tap the cookie now',\n        'Make <b>1 duodecillion</b> cookies from clicking.<q>I heard the mobile version is out now.</q>',\n        [1, 5, spritesheet],\n    );\n    Game.last.order = 1015;\n    Achievement(\n        'Cookie Destroyer',\n        'Make <b>100 duodecillion</b> cookies from clicking.<q>Agent Johnson was here</q>',\n        [2, 5, spritesheet],\n    );\n    Game.last.order = 1016;\n    Achievement('Give it a click', 'Make <b>10 tredecillion</b> cookies from clicking.', [\n        3,\n        5,\n        spritesheet,\n    ]);\n    Game.last.order = 1017;\n    Achievement(\n        'Clicking Frenzy: Our Lord and Saviour',\n        'Make <b>1 quattuordecillion</b> cookies from clicking.',\n        [4, 5, spritesheet],\n    );\n    Game.last.order = 1018;\n    Achievement(\n        'Hand-made cookies are still the best',\n        'Make <b>100 quattuordecillion</b> cookies from clicking.',\n        [5, 5, spritesheet],\n    );\n    Game.last.order = 1019;\n    Achievement(\n        'My strange clicking addiction',\n        'Make <b>10 quindecillion</b> cookies from clicking.',\n        [6, 5, spritesheet],\n    );\n    Game.last.order = 1019;\n\n    // Prestige amount\n\n    Achievement('Heavenly', 'Reach prestige level <b>100</b>.', [19, 7]);\n    Game.last.order = 30010;\n    Achievement('Transcendent', 'Reach prestige level <b>10,000</b>.', [18, 7]);\n    Game.last.order = 30011;\n    Achievement('Higher energy state', 'Reach prestige level <b>1 million</b>.', [17, 7]);\n    Game.last.order = 30012;\n    Achievement('Omniverse', 'Reach prestige level <b>100 million</b>.', [16, 7]);\n    Game.last.order = 30013;\n    Achievement('The Ascendant', 'Reach prestige level <b>10 billion</b>.', [15, 7]);\n    Game.last.order = 30014;\n\n    // Themed upgrades\n\n    Achievement('Getting fancy', 'Purchase <b>all fancy biscuits</b>.', [21, 8]);\n    Game.last.order = 21101;\n    Achievement('You wanna be popular?', 'Purchase <b>all popular biscuits</b>.', [20, 9]);\n    Game.last.order = 21103;\n    Achievement('Emmanuel Macaron', 'Purchase <b>all macarons</b>.', [20, 8]);\n    Game.last.order = 21102;\n    Achievement('Rich butterfingers', 'Purchase <b>all rich butter cookies</b>.', [21, 9]);\n    Game.last.order = 21104;\n    Achievement('Bake me, maybe?', 'Purchase <b>all maybe cookies</b>.', [25, 29]);\n    Game.last.order = 21106;\n    Achievement(\n        'Burger Clicker',\n        'Purchase <b>all not cookies</b>.<q>Shoutout to the old Idle Game Maker!</q>',\n        [26, 29],\n    );\n    Game.last.order = 21107;\n    Achievement('Pastries from the past', 'Purchase <b>all pastries</b>.', [27, 29]);\n    Game.last.order = 21105;\n    Achievement(\n        'Purrfect Perfection',\n        'Purrchase <b>every kitten upgrade</b>.<q>Are you sick of these puns yet?</q>',\n        [26, 7],\n    );\n    Game.last.order = 10001;\n    Achievement(\n        \"It's sweet, sweet, sweet Synergy\",\n        \"Purchase <b>all Synergy I upgrades</b>.<q>It's ours for the baking.</q>\",\n        [9, 20],\n    );\n    Game.last.order = 6008;\n    Achievement('Out of Energy? Get Synergy!', 'Purchase <b>all Synergy II upgrades</b>.', [9, 29]);\n    Game.last.order = 6009;\n    Achievement(\n        'Spike the dragon',\n        'Purchase <b>all dragon upgrades</b>.<q>Keep an eye on your gems.</q>',\n        [30, 12],\n    );\n    Game.last.order = 21109;\n    Achievement(\n        'Collecting these is like growing plants',\n        'Purchase <b>all plant upgrades</b>.<q>It takes a looooong time.</q>',\n        [24, 25],\n    );\n    Game.last.order = 21108;\n\n    // Buildings' level\n\n    Achievement('Level 1 complete!', 'Reach level <b>1</b> of every building.', [\n        0,\n        2,\n        spritesheet,\n    ]);\n    Game.last.order = 5017;\n    Achievement('Five Hive', 'Reach level <b>5</b> of every building.', [1, 2, spritesheet]);\n    Game.last.order = 5018;\n    Achievement('This took forever', 'Reach level <b>10</b> of every building.', [\n        2,\n        2,\n        spritesheet,\n    ]);\n    Game.last.order = 5019;\n\n    // Shadow achievements\n\n    Achievement('Mod-God complex', 'Name yourself <b>Darky</b>.<q>Ducky.</q>', [2, 12]);\n    Game.last.order = 30201;\n    Game.last.pool = 'shadow';\n    Achievement('Golden Jackpot', 'Click <b>77,777 golden cookies</b>.', [0, 3, spritesheet]);\n    Game.last.order = 10001;\n    Game.last.pool = 'shadow';\n\n    // Etc\n\n    Achievement(\n        'All you had to do was ask',\n        \"Click this custom achievement's slot.<q>Here you go.</q>\",\n        [2, 4, spritesheet],\n    );\n    Game.last.order = 11001;\n    Game.last.clickFunction = () => {\n        if (!Game.HasAchiev('All you had to do was ask')) {\n            PlaySound('snd/tick.mp3');\n            Game.Win('All you had to do was ask');\n        }\n    };\n};\n\nexport default createHook;\n", "const overrides = () => {\n    const style = document.createElement('style');\n    style.textContent =\n        '.darky:before{background:url(https://i.imgur.com/q8nNdkI.png);background-position:120px 0px;}';\n    document.head.appendChild(style);\n\n    Game.crate = new Function(\n        `return ${Game.crate\n            .toString()\n            .split(\"shadow';\")\n            .join(\n                \" shadow';\\nif (me.darky === 1) classes+=' darky'; //Darky's achievement package injection\",\n            )\n            .split('mysterious?')\n            .join(\n                \"mysterious? (me.darky === 1) ? 'background-image:url(\\\\'https://i.imgur.com/JKKvixm.png\\\\')'/*Darky's achievement package injection*/ : \",\n            )}`,\n    )();\n    Game.crateTooltip = new Function(\n        `return ${Game.crateTooltip\n            .toString()\n            .split('if (mysterious) icon=[0,7];')\n            .join(\n                \"if (mysterious) icon=[0,7]; if (mysterious && me.darky === 1) icon = [1, 4, 'https://i.imgur.com/AWmeHiO.png']\",\n            )}`,\n    )();\n\n    Game.Achievements['Grand design'].icon = [1, 0, 'https://i.imgur.com/AWmeHiO.png'];\n    Game.Achievements.Ecumenopolis.icon = [5, 0, 'https://i.imgur.com/AWmeHiO.png'];\n    Game.RebuildUpgrades();\n    Game.Achievements['Grand design'].order = 5011;\n    Game.Achievements.Ecumenopolis.order = 5015;\n    Game.Achievements.Polymath.order = 6010;\n    Game.Achievements['Renaissance baker'].order = 6011;\n    Game.Achievements['The elder scrolls'].order = 6012;\n    Game.Achievements['Tabloid addiction'].order = 11003;\n    Game.Achievements['Olden days'].order = 11002;\n    Game.Achievements.Sacrifice.order = 30015;\n    Game.Achievements.Oblivion.order = 30016;\n    Game.Achievements['From scratch'].order = 30017;\n    Game.Achievements['Four-leaf cookie'].order = 10002;\n    Game.Achievements['Seven horseshoes'].order = 10000;\n    Game.Achievements['Third-party'].order = 30202;\n};\n\nexport default overrides;\n", "import checkHookContent from './checkHook';\nimport createHook from './createHook';\nimport overrides from './overrides';\n\nconst init = () => {\n    overrides();\n\n    Game.registerHook('check', checkHookContent);\n    createHook();\n};\n\nexport default init;\n", "const load = saveString => {\n    const save = JSON.parse(saveString);\n\n    save.unlockedAchievs.forEach(achievementName => {\n        Game.Achievements[achievementName].won = 1;\n    });\n};\n\nexport default load;\n", "const save = () => {\n    const DarkySave = {\n        unlockedAchievs: [],\n    };\n\n    Object.values(Game.AchievementsById).forEach(achievement => {\n        if (achievement.darky && achievement.won) {\n            DarkySave.unlockedAchievs.push(achievement.name);\n        }\n    });\n\n    return JSON.stringify(DarkySave);\n};\n\nexport default save;\n", "import Achievement from './Achievement';\nimport init from './init';\nimport load from './load';\nimport save from './save';\n\nconst DarkysAchievementPackage = {\n    init,\n    save,\n    load,\n    Achievement,\n};\n\nGame.registerMod('Darkys Achievement Package', DarkysAchievementPackage);\n"],
  "mappings": "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",
  "names": ["Achievement", "__name", "name", "desc", "icon", "answer", "Achievement_default", "checkHookContent", "building", "sum", "upgrade", "level", "checkHook_default", "spritesheet", "externalSpritesheet", "createHook", "__name", "Achievement_default", "createHook_default", "overrides", "__name", "style", "overrides_default", "init", "__name", "overrides_default", "checkHook_default", "createHook_default", "init_default", "load", "__name", "saveString", "achievementName", "load_default", "save", "__name", "DarkySave", "achievement", "save_default", "DarkysAchievementPackage", "init_default", "save_default", "load_default", "Achievement_default"]
}

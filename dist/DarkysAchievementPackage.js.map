{"version":3,"file":"DarkysAchievementPackage.js","mappings":"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","sources":["webpack://darkys-achievement-package/./src/init/overrides/index.js","webpack://darkys-achievement-package/./src/init/checkHook/index.js","webpack://darkys-achievement-package/./src/Achievement/index.js","webpack://darkys-achievement-package/./src/init/createHook/index.js","webpack://darkys-achievement-package/./src/index.js","webpack://darkys-achievement-package/./src/init/index.js","webpack://darkys-achievement-package/./src/save/index.js","webpack://darkys-achievement-package/./src/load/index.js"],"sourcesContent":["const overrides = () => {\n const style = document.createElement('style');\n style.textContent = '.darky:before{background:url(https://i.imgur.com/q8nNdkI.png);background-position:120px 0px;}';\n document.head.appendChild(style);\n\n Game.crate = new Function(\n  `return ${Game.crate\n   .toString()\n   .split(\"shadow';\")\n   .join(\" shadow';\\nif (me.darky === 1) classes+=' darky'; //Darky's achievement package injection\")\n   .split('mysterious?')\n   .join(\n    \"mysterious? (me.darky === 1) ? 'background-image:url(\\\\'https://i.imgur.com/JKKvixm.png\\\\')'/*Darky's achievement package injection*/ : \",\n   )}`,\n )();\n Game.crateTooltip = new Function(\n  `return ${Game.crateTooltip\n   .toString()\n   .split('if (mysterious) icon=[0,7];')\n   .join(\n    \"if (mysterious) icon=[0,7]; if (mysterious && me.darky === 1) icon = [1, 4, 'https://i.imgur.com/AWmeHiO.png']\",\n   )}`,\n )();\n\n Game.Achievements['Grand design'].icon = [1, 0, 'https://i.imgur.com/AWmeHiO.png'];\n Game.Achievements['Ecumenopolis'].icon = [5, 0, 'https://i.imgur.com/AWmeHiO.png'];\n Game.RebuildUpgrades();\n Game.Achievements['Grand design'].order = 5011;\n Game.Achievements['Ecumenopolis'].order = 5015;\n Game.Achievements['Polymath'].order = 6010;\n Game.Achievements['Renaissance baker'].order = 6011;\n Game.Achievements['The elder scrolls'].order = 6012;\n Game.Achievements['Tabloid addiction'].order = 11003;\n Game.Achievements['Olden days'].order = 11002;\n Game.Achievements['Sacrifice'].order = 30015;\n Game.Achievements['Oblivion'].order = 30016;\n Game.Achievements['From scratch'].order = 30017;\n Game.Achievements['Four-leaf cookie'].order = 10002;\n Game.Achievements['Seven horseshoes'].order = 10000;\n Game.Achievements['Third-party'].order = 30202;\n};\n\nexport default overrides;\n","const buildingsLevels = Game.ObjectsById.map(object => object.level);\nlet minAmount = 0;\nlet prestigeUpgradesOwned = 0;\n\nGame.ObjectsById.forEach(object => {\n minAmount = Math.min(object.amount, 100000);\n});\nGame.PrestigeUpgrades.forEach(upgrade => {\n if (upgrade.bought) {\n  prestigeUpgradesOwned += 1;\n }\n});\n\nconst checkHookContent = [\n // Have X buildings\n () => {\n  if (Game.Objects['Cursor'].amount >= 900) {\n   Game.Win('Squeak goes the mouse');\n  }\n },\n () => {\n  if (Game.Objects['Grandma'].amount >= 650) {\n   Game.Win(\"I'm too old for this\");\n  }\n },\n () => {\n  if (Game.Objects['Farm'].amount >= 650) {\n   Game.Win('Gorden garden');\n  }\n },\n () => {\n  if (Game.Objects['Mine'].amount >= 650) {\n   Game.Win('A fine mine you got there');\n  }\n },\n () => {\n  if (Game.Objects['Factory'].amount >= 650) {\n   Game.Win('Working 24/7');\n  }\n },\n () => {\n  if (Game.Objects['Bank'].amount >= 650) {\n   Game.Win('Bank on it');\n  }\n },\n () => {\n  if (Game.Objects['Temple'].amount >= 650) {\n   Game.Win('Temple pun');\n  }\n },\n () => {\n  if (Game.Objects['Wizard tower'].amount >= 650) {\n   Game.Win(\"It's magic, Joel!\");\n  }\n },\n () => {\n  if (Game.Objects['Shipment'].amount >= 650) {\n   Game.Win('My shipment arrives in the morning');\n  }\n },\n () => {\n  if (Game.Objects['Alchemy lab'].amount >= 650) {\n   Game.Win('Turning cookies into gold since 2013');\n  }\n },\n () => {\n  if (Game.Objects['Portal'].amount >= 650) {\n   Game.Win('A portal inside of a portal');\n  }\n },\n () => {\n  if (Game.Objects['Time machine'].amount >= 650) {\n   Game.Win('It all began on the 8th of August, 2013');\n  }\n },\n () => {\n  if (Game.Objects['Antimatter condenser'].amount >= 650) {\n   Game.Win('AntimatterCon');\n  }\n },\n () => {\n  if (Game.Objects['Prism'].amount >= 650) {\n   Game.Win('Stop being a prissm');\n  }\n },\n () => {\n  if (Game.Objects['Chancemaker'].amount >= 650) {\n   Game.Win('And yet you probably never got a blab');\n  }\n },\n () => {\n  if (Game.Objects['Fractal engine'].amount >= 650) {\n   Game.Win('Gouchnox');\n  }\n },\n () => {\n  if (Game.Objects['Javascript console'].amount >= 650) {\n   Game.Win('Follow the javascript');\n  }\n },\n () => {\n  if (Game.Objects['Idleverse'].amount >= 650) {\n   Game.Win(\"Don't call them fanverses, you fool\");\n  }\n },\n // Have X of every building\n () => {\n  if (minAmount >= 650) {\n   Game.Win('Sexcentennial and a half');\n  }\n },\n // Buildings owned\n () => {\n  if (Game.BuildingsOwned >= 3000) {\n   Game.Win('Owner of Buildings');\n  }\n },\n () => {\n  if (Game.BuildingsOwned >= 5000) {\n   Game.Win('World-dominating company');\n  }\n },\n () => {\n  if (Game.BuildingsOwned >= 6000) {\n   Game.Win('Creator of the Cookieverse');\n  }\n },\n () => {\n  if (Game.BuildingsOwned >= 7000) {\n   Game.Win(\"Build until you can't build anymore\");\n  }\n },\n () => {\n  if (Game.BuildingsOwned >= 9000) {\n   Game.Win('Overlord');\n  }\n },\n () => {\n  if (Game.BuildingsOwned >= 10000) {\n   Game.Win(\"That's enough, boss\");\n  }\n },\n // Upgrades owned\n () => {\n  if (Game.UpgradesOwned >= 500) {\n   Game.Win('Earth-shattering association');\n  }\n },\n () => {\n  if (Game.UpgradesOwned >= 600) {\n   Game.Win('Maker of the Idleverse');\n  }\n },\n // Prestige upgrades owned\n () => {\n  if (Game.Has('Lucky digit') && Game.Has('Lucky number') && Game.Has('Lucky payout')) {\n   Game.Win('Secret fortune');\n  }\n },\n () => {\n  if (prestigeUpgradesOwned >= 15) {\n   Game.Win('Pretty prestige');\n  }\n },\n () => {\n  if (prestigeUpgradesOwned >= 30) {\n   Game.Win('Live and learn');\n  }\n },\n () => {\n  if (prestigeUpgradesOwned >= 60) {\n   Game.Win('We will stay with you forever');\n  }\n },\n // Big cookie clicks\n () => {\n  if (Game.cookieClicks >= 1000) {\n   Game.Win('Clicker');\n  }\n },\n () => {\n  if (Game.cookieClicks >= 10000) {\n   Game.Win('Advanced Clicker');\n  }\n },\n () => {\n  if (Game.cookieClicks >= 25000) {\n   Game.Win('Expert Clicker');\n  }\n },\n // Make X cookies from clicking\n () => {\n  if (Game.handmadeCookies >= 1e29) {\n   Game.Win('Stop it, it clickles');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e31) {\n   Game.Win('Keep up the click');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e33) {\n   Game.Win('Clicking is the new booping');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e35) {\n   Game.Win('The final click');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e37) {\n   Game.Win('Sike, thats the wrong achievement');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e39) {\n   Game.Win('How about we tap the cookie now');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e41) {\n   Game.Win('Cookie Destroyer');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e43) {\n   Game.Win('Give it a click');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e45) {\n   Game.Win('Clicking Frenzy: Our Lord and Saviour');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e47) {\n   Game.Win('Hand-made cookies are still the best');\n  }\n },\n () => {\n  if (Game.handmadeCookies >= 1e49) {\n   Game.Win('My strange clicking addiction');\n  }\n },\n // Prestige amount\n () => {\n  if (Game.prestige >= 100) {\n   Game.Win('Heavenly');\n  }\n },\n () => {\n  if (Game.prestige >= 10000) {\n   Game.Win('Transcendent');\n  }\n },\n () => {\n  if (Game.prestige >= 1000000) {\n   Game.Win('Higher energy state');\n  }\n },\n () => {\n  if (Game.prestige >= 1e8) {\n   Game.Win('Omniverse');\n  }\n },\n () => {\n  if (Game.prestige >= 1e10) {\n   Game.Win('The Ascendant');\n  }\n },\n // Themed upgrades\n () => {\n  if (\n   Game.Has('British tea biscuits') &&\n   Game.Has('Chocolate british tea biscuits') &&\n   Game.Has('Round british tea biscuits') &&\n   Game.Has('Round chocolate british tea biscuits') &&\n   Game.Has('Round british tea biscuits with heart motif') &&\n   Game.Has('Round chocolate british tea biscuits with heart motif')\n  ) {\n   Game.Win('Getting fancy');\n  }\n },\n () => {\n  if (\n   Game.Has('Caramoas') &&\n   Game.Has('Sagalongs') &&\n   Game.Has('Shortfoils') &&\n   Game.Has('Win mints') &&\n   Game.Has('Fig gluttons') &&\n   Game.Has('Loreols') &&\n   Game.Has('Jaffa cakes') &&\n   Game.Has(\"Grease's cups\") &&\n   Game.Has('Digits') &&\n   Game.Has('Lombardia cookies') &&\n   Game.Has('Bastenaken cookies') &&\n   Game.Has('Festivity loops') &&\n   Game.Has('Havabreaks') &&\n   Game.Has('Zilla wafers') &&\n   Game.Has('Dim Dams') &&\n   Game.Has('Pokey')\n  ) {\n   Game.Win('You wanna be popular?');\n  }\n },\n () => {\n  if (\n   Game.Has('Rose macarons') &&\n   Game.Has('Lemon macarons') &&\n   Game.Has('Chocolate macarons') &&\n   Game.Has('Pistachio macarons') &&\n   Game.Has('Hazelnut macarons') &&\n   Game.Has('Violet macarons') &&\n   Game.Has('Caramel macarons') &&\n   Game.Has('Licorice macarons') &&\n   Game.Has('Earl Grey macarons')\n  ) {\n   Game.Win('Emmanuel Macaron');\n  }\n },\n () => {\n  if (\n   Game.Has('Butter horseshoes') &&\n   Game.Has('Butter pucks') &&\n   Game.Has('Butter knots') &&\n   Game.Has('Butter slabs') &&\n   Game.Has('Butter swirls')\n  ) {\n   Game.Win('Rich butterfingers');\n  }\n },\n () => {\n  if (\n   Game.Has('Cookie dough') &&\n   Game.Has('Burnt cookie') &&\n   Game.Has('A chocolate chip cookie but with the chips picked off for some reason') &&\n   Game.Has('Flavor text cookie') &&\n   Game.Has('High-definition cookie') &&\n   Game.Has('Crackers')\n  ) {\n   Game.Win('Bake me, maybe?');\n  }\n },\n () => {\n  if (\n   Game.Has('Toast') &&\n   Game.Has('Peanut butter & jelly') &&\n   Game.Has('Wookies') &&\n   Game.Has('Cheeseburger') &&\n   Game.Has('One lone chocolate chip') &&\n   Game.Has('Pizza') &&\n   Game.Has('Candy')\n  ) {\n   Game.Win('Burger Clicker');\n  }\n },\n () => {\n  if (\n   Game.Has('Profiteroles') &&\n   Game.Has('Jelly donut') &&\n   Game.Has('Glazed donut') &&\n   Game.Has('Chocolate cake') &&\n   Game.Has('Strawberry cake') &&\n   Game.Has('Apple pie') &&\n   Game.Has('Lemon meringue pie') &&\n   Game.Has('Butter croissant')\n  ) {\n   Game.Win('Pastries from the past');\n  }\n },\n () => {\n  if (\n   Game.Has('Kitten helpers') &&\n   Game.Has('Kitten workers') &&\n   Game.Has('Kitten engineers') &&\n   Game.Has('Kitten overseers') &&\n   Game.Has('Kitten managers') &&\n   Game.Has('Kitten accountants') &&\n   Game.Has('Kitten specialists') &&\n   Game.Has('Kitten experts') &&\n   Game.Has('Kitten consultants') &&\n   Game.Has('Kitten assistants to the regional manager') &&\n   Game.Has('Kitten marketeers') &&\n   Game.Has('Kitten analysts') &&\n   Game.Has('Kitten executives') &&\n   Game.Has('Kitten angels') &&\n   Game.Has('Fortune #103')\n  ) {\n   Game.Win('Purrfect Perfection');\n  }\n },\n () => {\n  if (\n   Game.Has('Future almanacs') &&\n   Game.Has('Seismic magic') &&\n   Game.Has('Quantum electronics') &&\n   Game.Has('Contracts from beyond') &&\n   Game.Has('Paganism') &&\n   Game.Has('Arcane knowledge') &&\n   Game.Has('Fossil fuels') &&\n   Game.Has('Primordial ores') &&\n   Game.Has('Infernal crops') &&\n   Game.Has('Relativistic parsec-skipping') &&\n   Game.Has('Extra physics funding') &&\n   Game.Has('Light magic') &&\n   Game.Has('Gemmed talismans') &&\n   Game.Has('Recursive mirrors') &&\n   Game.Has('Script grannies') &&\n   Game.Has('Perforated mille-feuille cosmos')\n  ) {\n   Game.Win(\"It's sweet, sweet, sweet Synergy\");\n  }\n },\n () => {\n  if (\n   Game.Has('Rain prayer') &&\n   Game.Has('Asteroid mining') &&\n   Game.Has('Temporal overclocking') &&\n   Game.Has('Printing presses') &&\n   Game.Has('God particle') &&\n   Game.Has('Magical botany') &&\n   Game.Has('Shipyards') &&\n   Game.Has('Gold fund') &&\n   Game.Has('Abysmal glimmer') &&\n   Game.Has('Primeval glow') &&\n   Game.Has('Chemical proficiency') &&\n   Game.Has('Mystical energies') &&\n   Game.Has('Charm quarks') &&\n   Game.Has('Mice clicking mice') &&\n   Game.Has('Tombola computing') &&\n   Game.Has('Infraverses and superverses')\n  ) {\n   Game.Win('Out of Energy? Get Synergy!');\n  }\n },\n () => {\n  if (Game.Has('Dragon scale') && Game.Has('Dragon claw') && Game.Has('Dragon fang') && Game.Has('Dragon teddy bear')) {\n   Game.Win('Spike the dragon');\n  }\n },\n () => {\n  if (\n   Game.Has('Elderwort biscuits') &&\n   Game.Has('Bakeberry cookies') &&\n   Game.Has('Duketater cookies') &&\n   Game.Has('Green yeast digestives') &&\n   Game.Has('Fern tea') &&\n   Game.Has('Ichor syrup') &&\n   Game.Has('Wheat slims')\n  ) {\n   Game.Win('Collecting these is like growing plants');\n  }\n },\n // Buildings' level\n () => {\n  if (buildingsLevels.filter(level => level >= 1).length === Game.ObjectsById.length) {\n   Game.Win('Level 1 complete!');\n  }\n },\n () => {\n  if (buildingsLevels.filter(level => level >= 5).length === Game.ObjectsById.length) {\n   Game.Win('Five Hive');\n  }\n },\n () => {\n  if (buildingsLevels.filter(level => level >= 10).length === Game.ObjectsById.length) {\n   Game.Win('This took forever');\n  }\n },\n // Shadow achievements\n () => {\n  if (Game.bakeryName === 'Darky') {\n   Game.Win('Mod-God complex');\n  }\n },\n () => {\n  if (Game.goldenClicks >= 77777) {\n   Game.Win('Golden Jackpot');\n  }\n },\n];\n\nexport default checkHookContent;\n","const Achievement = (name, desc, icon) => {\n const answer = new Game.Achievement(name, desc, icon);\n answer.darky = 1;\n\n return answer;\n};\n\nexport default Achievement;\n","import Achievement from 'Achievement';\n\nconst spritesheet = 'https://hyoretsu.github.io/DarkysCheevosPackage/static/achievements.png';\nconst externalSpritesheet = 'https://i.imgur.com/3jNJJNw.png';\n\nconst createHook = () => {\n // Have X buildings\n {\n  Achievement('Squeak goes the mouse', 'Have <b>900</b> cursors.', [0, 19]);\n  Game.last.order = 1060;\n  Achievement(\"I'm too old for this\", 'Have <b>650</b> grandmas.', [1, 21]);\n  Game.last.order = 1110;\n  Achievement('Gorden garden', 'Have <b>650</b> farms.', [2, 21]);\n  Game.last.order = 1210;\n  Achievement('A fine mine you got there', 'Have <b>650</b> mines.', [3, 21]);\n  Game.last.order = 1310;\n  Achievement('Working 24/7', 'Have <b>650</b> factories.', [4, 21]);\n  Game.last.order = 1410;\n  Achievement('Bank on it', 'Have <b>650</b> banks.', [15, 21]);\n  Game.last.order = 1430;\n  Achievement('Temple pun', 'Have <b>650</b> temples.', [16, 21]);\n  Game.last.order = 1460;\n  Achievement(\"It's magic, Joel!\", 'Have <b>650</b> wizard towers.', [17, 21]);\n  Game.last.order = 1480;\n  Achievement('My shipment arrives in the morning', 'Have <b>650</b> shipments.', [5, 21]);\n  Game.last.order = 1510;\n  Achievement('Turning cookies into gold since 2013', 'Have <b>650</b> alchemy labs.', [6, 21]);\n  Game.last.order = 1610;\n  Achievement('A portal inside of a portal', 'Have <b>650</b> portals.', [7, 21]);\n  Game.last.order = 1710;\n  Achievement('It all began on the 8th of August, 2013', 'Have <b>650</b> time machines.', [8, 21]);\n  Game.last.order = 1810;\n  Achievement('AntimatterCon', 'Have <b>650</b> antimatter condensers.', [13, 21]);\n  Game.last.order = 1910;\n  Achievement('Stop being a prissm', 'Have <b>650</b> prisms.', [14, 21]);\n  Game.last.order = 2010;\n  Achievement('And yet you probably never got a blab', 'Have <b>650</b> chancemakers.', [19, 21]);\n  Game.last.order = 2110;\n  Achievement('Gouchnox', 'Have <b>650</b> fractal engines.<q>69</q>', [20, 21]);\n  Game.last.order = 2210;\n  Achievement('Follow the javascript', 'Have <b>650</b> javascript consoles.', [32, 21]);\n  Game.last.order = 2310;\n  Achievement(\"Don't call them fanverses, you fool\", 'Have <b>650</b> idleverses.', [33, 21]);\n  Game.last.order = 2410;\n }\n // Have X of every building\n {\n  Achievement('Sexcentennial and a half', 'Have at least <b>650 of everything</b>.<q>Yes I just did that.</q>', [\n   1,\n   3,\n   spritesheet,\n  ]);\n  Game.last.order = 7004;\n }\n // Buildings owned\n {\n  Achievement('Owner of Buildings', 'Own <b>3000</b> buildings.', [0, 0, spritesheet]);\n  Game.last.order = 5010;\n  Achievement('World-dominating company', 'Own <b>5000</b> buildings.', [2, 0, spritesheet]);\n  Game.last.order = 5012;\n  Achievement('Creator of the Cookieverse', 'Own <b>6000</b> buildings.', [3, 0, spritesheet]);\n  Game.last.order = 5013;\n  Achievement(\"Build until you can't build anymore\", 'Own <b>7000</b> buildings.', [4, 0, spritesheet]);\n  Game.last.order = 5014;\n  Achievement('Overlord', 'Own <b>9000</b> buildings.', [4, 4, spritesheet]);\n  Game.last.order = 5016;\n  Achievement(\"That's enough, boss\", 'Own <b>10000</b> buildings.', [6, 0, spritesheet]);\n  Game.last.order = 5017;\n }\n // Upgrades owned\n {\n  Achievement('Earth-shattering association', 'Purchase <b>500</b> upgrades.', [2, 1, spritesheet]);\n  Game.last.order = 6003;\n  Achievement('Maker of the Idleverse', 'Purchase <b>600</b> upgrades.', [3, 1, spritesheet]);\n  Game.last.order = 6004;\n }\n // Prestige upgrades owned\n {\n  Achievement(\n   'Secret fortune',\n   'Purchase the <b>3 secret prestige upgrades</b>.<q>You got more than one ace up your sleeve, huh?',\n   [24, 15],\n  );\n  Game.last.order = 32001;\n  Achievement('Pretty prestige', 'Purchase <b>15</b> prestige upgrades.', [19, 48, externalSpritesheet]);\n  Game.last.order = 6005;\n  Achievement('Live and learn', 'Purchase <b>30</b> prestige upgrades.<q>And never forget.', [\n   19,\n   47,\n   externalSpritesheet,\n  ]);\n  Game.last.order = 6006;\n  Achievement('We will stay with you forever', \"Purchase <b>60</b> prestige upgrades.<q>Don't reset us.</q>\", [\n   19,\n   46,\n   externalSpritesheet,\n  ]);\n  Game.last.order = 6007;\n }\n // Big cookie clicks\n {\n  Achievement('Clicker', 'Click on the big cookie <b>1,000</b> times.', [11, 22]);\n  Game.last.order = 1020;\n  Achievement('Advanced Clicker', 'Click on the big cookie <b>10,000</b> times.', [11, 23]);\n  Game.last.order = 1021;\n  Achievement('Expert Clicker', 'Click on the big cookie <b>25,000</b> times.', [11, 24]);\n  Game.last.order = 1022;\n }\n // Make X cookies from clicking\n {\n  Achievement('Stop it, it clickles', 'Make <b>100 octillion</b> cookies from clicking.', [11, 21]);\n  Game.last.order = 1010;\n  Achievement('Keep up the click', 'Make <b>10 nonillion</b> cookies from clicking.', [0, 69, externalSpritesheet]);\n  Game.last.order = 1011;\n  Achievement('Clicking is the new booping', 'Make <b>1 decillion</b> cookies from clicking.', [\n   0,\n   34,\n   externalSpritesheet,\n  ]);\n  Game.last.order = 1012;\n  Achievement('The final click', 'Make <b>100 decillion</b> cookies from clicking.<q>But its never over.</q>', [\n   0,\n   46,\n   externalSpritesheet,\n  ]);\n  Game.last.order = 1013;\n  Achievement(\n   'Sike, thats the wrong achievement',\n   \"Make <b>10 undecillion</b> cookies from clicking.<q>The last achievement wasn't the final one.</q>\",\n   [0, 5, spritesheet],\n  );\n  Game.last.order = 1014;\n  Achievement(\n   'How about we tap the cookie now',\n   'Make <b>1 duodecillion</b> cookies from clicking.<q>I heard the mobile version is out now.</q>',\n   [1, 5, spritesheet],\n  );\n  Game.last.order = 1015;\n  Achievement('Cookie Destroyer', 'Make <b>100 duodecillion</b> cookies from clicking.<q>Agent Johnson was here</q>', [\n   2,\n   5,\n   spritesheet,\n  ]);\n  Game.last.order = 1016;\n  Achievement('Give it a click', 'Make <b>10 tredecillion</b> cookies from clicking.', [3, 5, spritesheet]);\n  Game.last.order = 1017;\n  Achievement('Clicking Frenzy: Our Lord and Saviour', 'Make <b>1 quattuordecillion</b> cookies from clicking.', [\n   4,\n   5,\n   spritesheet,\n  ]);\n  Game.last.order = 1018;\n  Achievement('Hand-made cookies are still the best', 'Make <b>100 quattuordecillion</b> cookies from clicking.', [\n   5,\n   5,\n   spritesheet,\n  ]);\n  Game.last.order = 1019;\n  Achievement('My strange clicking addiction', 'Make <b>10 quindecillion</b> cookies from clicking.', [\n   6,\n   5,\n   spritesheet,\n  ]);\n  Game.last.order = 1019;\n }\n // Prestige amount\n {\n  Achievement('Heavenly', 'Reach prestige level <b>100</b>.', [19, 7]);\n  Game.last.order = 30010;\n  Achievement('Transcendent', 'Reach prestige level <b>10,000</b>.', [18, 7]);\n  Game.last.order = 30011;\n  Achievement('Higher energy state', 'Reach prestige level <b>1 million</b>.', [17, 7]);\n  Game.last.order = 30012;\n  Achievement('Omniverse', 'Reach prestige level <b>100 million</b>.', [16, 7]);\n  Game.last.order = 30013;\n  Achievement('The Ascendant', 'Reach prestige level <b>10 billion</b>.', [15, 7]);\n  Game.last.order = 30014;\n }\n // Themed upgrades\n {\n  Achievement('Getting fancy', 'Purchase <b>all fancy biscuits</b>.', [21, 8]);\n  Game.last.order = 21101;\n  Achievement('You wanna be popular?', 'Purchase <b>all popular biscuits</b>.', [20, 9]);\n  Game.last.order = 21103;\n  Achievement('Emmanuel Macaron', 'Purchase <b>all macarons</b>.', [20, 8]);\n  Game.last.order = 21102;\n  Achievement('Rich butterfingers', 'Purchase <b>all rich butter cookies</b>.', [21, 9]);\n  Game.last.order = 21104;\n  Achievement('Bake me, maybe?', 'Purchase <b>all maybe cookies</b>.', [25, 29]);\n  Game.last.order = 21106;\n  Achievement('Burger Clicker', 'Purchase <b>all not cookies</b>.<q>Shoutout to the old Idle Game Maker!</q>', [\n   26,\n   29,\n  ]);\n  Game.last.order = 21107;\n  Achievement('Pastries from the past', 'Purchase <b>all pastries</b>.', [27, 29]);\n  Game.last.order = 21105;\n  Achievement('Purrfect Perfection', 'Purrchase <b>every kitten upgrade</b>.<q>Are you sick of these puns yet?</q>', [\n   26,\n   7,\n  ]);\n  Game.last.order = 10001;\n  Achievement(\n   \"It's sweet, sweet, sweet Synergy\",\n   \"Purchase <b>all Synergy I upgrades</b>.<q>It's ours for the baking.</q>\",\n   [9, 20],\n  );\n  Game.last.order = 6008;\n  Achievement('Out of Energy? Get Synergy!', 'Purchase <b>all Synergy II upgrades</b>.', [9, 29]);\n  Game.last.order = 6009;\n  Achievement('Spike the dragon', 'Purchase <b>all dragon upgrades</b>.<q>Keep an eye on your gems.</q>', [30, 12]);\n  Game.last.order = 21109;\n  Achievement(\n   'Collecting these is like growing plants',\n   'Purchase <b>all plant upgrades</b>.<q>It takes a looooong time.</q>',\n   [24, 25],\n  );\n  Game.last.order = 21108;\n }\n // Buildings' level\n {\n  Achievement('Level 1 complete!', 'Reach level <b>1</b> of every building.', [0, 2, spritesheet]);\n  Game.last.order = 5017;\n  Achievement('Five Hive', 'Reach level <b>5</b> of every building.', [1, 2, spritesheet]);\n  Game.last.order = 5018;\n  Achievement('This took forever', 'Reach level <b>10</b> of every building.', [2, 2, spritesheet]);\n  Game.last.order = 5019;\n }\n // Shadow achievements\n {\n  Achievement('Mod-God complex', 'Name yourself <b>Darky</b>.<q>Ducky.</q>', [2, 12]);\n  Game.last.order = 30201;\n  Game.last.pool = 'shadow';\n  Achievement('Golden Jackpot', 'Click <b>77,777 golden cookies</b>.', [0, 3, spritesheet]);\n  Game.last.order = 10001;\n  Game.last.pool = 'shadow';\n }\n // Etc\n {\n  Achievement('All you had to do was ask', \"Click this custom achievement's slot.<q>Here you go.</q>\", [\n   2,\n   4,\n   spritesheet,\n  ]);\n  Game.last.order = 11001;\n  Game.last.clickFunction = () => {\n   if (!Game.HasAchiev('All you had to do was ask')) {\n    PlaySound('snd/tick.mp3');\n    Game.Win('All you had to do was ask');\n   }\n  };\n }\n};\n\nexport default createHook;\n","import init from './init';\nimport save from './save';\nimport load from './load';\nimport Achievement from './Achievement';\n\nconst DarkysAchievementPackage = {\n init,\n save,\n load,\n Achievement,\n};\n\nGame.registerMod('Darkys Achievement Package', DarkysAchievementPackage);\n","import overrides from './overrides';\nimport checkHookContent from './checkHook';\nimport createHook from './createHook';\n\nconst init = () => {\n overrides();\n\n Game.registerHook('check', checkHookContent);\n createHook();\n};\n\nexport default init;\n","const save = () => {\n const DarkySave = {\n  unlockedAchievs: [],\n };\n\n Object.values(Game.AchievementsById).forEach(achievement => {\n  if (achievement.darky && achievement.won) {\n   DarkySave.unlockedAchievs.push(achievement.name);\n  }\n });\n\n return JSON.stringify(DarkySave);\n};\n\nexport default save;\n","const load = saveString => {\n const save = JSON.parse(saveString);\n\n save.unlockedAchievs.forEach(achievementName => {\n  Game.Achievements[achievementName].won = 1;\n });\n};\n\nexport default load;\n"],"names":["buildingsLevels","Game","ObjectsById","map","object","level","minAmount","prestigeUpgradesOwned","forEach","Math","min","amount","PrestigeUpgrades","upgrade","bought","Objects","Win","BuildingsOwned","UpgradesOwned","Has","cookieClicks","handmadeCookies","prestige","filter","length","bakeryName","goldenClicks","name","desc","icon","answer","Achievement","darky","spritesheet","externalSpritesheet","DarkysAchievementPackage","init","style","document","createElement","textContent","head","appendChild","crate","Function","toString","split","join","crateTooltip","Achievements","RebuildUpgrades","order","overrides","registerHook","checkHookContent","last","pool","clickFunction","HasAchiev","PlaySound","save","DarkySave","unlockedAchievs","Object","values","AchievementsById","achievement","won","push","JSON","stringify","load","saveString","parse","achievementName","registerMod"],"sourceRoot":""}